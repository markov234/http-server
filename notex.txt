
1. Setting up virtual environment

- Create folder on computer for project. Open it in IDE.

- Create virtual environment: python3.13 -m venv venv

- Active virtual environment: source venv/bin/activate

- Configure VS code to use the virtual environment: Cmd + Shift + P

- Type and select: 'Python: Select Interpreter' and select the one for your venv (3.13) (and will say 'recommended')

- Verify you are in venv setup: open python interpreter (type 'python' in project terminal). Type 'import sys', followed by 'print(sys.executable)'. Should get output at something like '/Users/milanmarkovic/http_server/venv/bin/python', basically pointing to python in your venv for the project. Exit python interpreter by typing 'exit'.

- For now, project will use python default libraries. So no need to install any manually.







2. Directories and files setup (for now, no tests for this project)

- Create 'src' and 'tests' directories in your project workspace. src is for project code, tests for tests. So 3 main directories would be src, tests, and venv (README.md and requirements.txt are in main project directory, and these would make sense to wait until the end to make).

- Add __init__.py file to src and tests directories, so they can be imported as packages (needed for importing methods from main scripts to test files).

- Set up tests folder with VS code testing panel. Configure python tests -> unittest -> tests -> _test.py. This adds a .vscode directory, which holds simple settings for your testing in VS code GUI.

- If needed for passwords and such, add .env file to main project directory. This is where you will put sensitive information, and .env will be included in your .gitignore. This way you can use your sensitive information locally, and it will not be published on your public Github.











